"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[794],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=s(t),m=a,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return t?r.createElement(f,i(i({ref:n},p),{},{components:t})):r.createElement(f,i({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6901:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return u}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),i=["components"],c={title:"\u521b\u5efa\u88f8\u4ea4\u6613"},l="\u6784\u5efa\u539f\u59cb\u4ea4\u6613\uff08Raw Transaction\uff09",s={unversionedId:"zh/transaction-raw-create/README",id:"zh/transaction-raw-create/README",title:"\u521b\u5efa\u88f8\u4ea4\u6613",description:"\u5982\u679c\u4f60\u770b\u8fc7\u4e0a\u4e2a\u7ae0\u8282, \u90a3\u4e48\u4f60\u77e5\u9053\u5982\u4f55\u52a0\u8f7d\u4f60\u7684\u79c1\u94a5\u6765\u7b7e\u540d\u4ea4\u6613\u3002 \u6211\u4eec\u73b0\u5728\u5047\u8bbe\u4f60\u77e5\u9053\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u73b0\u5728\u4f60\u60f3\u8ba9\u539f\u59cb\u4ea4\u6613\u6570\u636e\u80fd\u591f\u5728\u4ee5\u540e\u5e7f\u64ad\u5b83\u3002",source:"@site/docs/zh/transaction-raw-create/README.md",sourceDirName:"zh/transaction-raw-create",slug:"/zh/transaction-raw-create/",permalink:"/ethereum-development-with-go-book/docs/zh/transaction-raw-create/",editUrl:"https://github.com/mhxw/ethereum-development-with-go-book/tree/dev/docs/zh/transaction-raw-create/README.md",tags:[],version:"current",frontMatter:{title:"\u521b\u5efa\u88f8\u4ea4\u6613"},sidebar:"zh",previous:{title:"\u8ba2\u9605\u65b0\u533a\u5757",permalink:"/ethereum-development-with-go-book/docs/zh/block-subscribe/"},next:{title:"\u53d1\u9001\u88f8\u4ea4\u6613",permalink:"/ethereum-development-with-go-book/docs/zh/transaction-raw-send/"}},p={},u=[{value:"\u5b8c\u6574\u4ee3\u7801",id:"\u5b8c\u6574\u4ee3\u7801",level:3}],d={toc:u};function m(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"\u6784\u5efa\u539f\u59cb\u4ea4\u6613raw-transaction"},"\u6784\u5efa\u539f\u59cb\u4ea4\u6613\uff08Raw Transaction\uff09"),(0,o.kt)("p",null,"\u5982\u679c\u4f60\u770b\u8fc7",(0,o.kt)("a",{parentName:"p",href:"../transfer-eth"},"\u4e0a\u4e2a\u7ae0\u8282"),", \u90a3\u4e48\u4f60\u77e5\u9053\u5982\u4f55\u52a0\u8f7d\u4f60\u7684\u79c1\u94a5\u6765\u7b7e\u540d\u4ea4\u6613\u3002 \u6211\u4eec\u73b0\u5728\u5047\u8bbe\u4f60\u77e5\u9053\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u73b0\u5728\u4f60\u60f3\u8ba9\u539f\u59cb\u4ea4\u6613\u6570\u636e\u80fd\u591f\u5728\u4ee5\u540e\u5e7f\u64ad\u5b83\u3002"),(0,o.kt)("p",null,"\u9996\u5148\u6784\u9020\u4e8b\u52a1\u5bf9\u8c61\u5e76\u5bf9\u5176\u8fdb\u884c\u7b7e\u540d\uff0c\u4f8b\u5982\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"tx := types.NewTransaction(nonce, toAddress, value, gasLimit, gasPrice, data)\n\nsignedTx, err := types.SignTx(tx, types.NewEIP155Signer(chainID), privateKey)\nif err != nil {\n  log.Fatal(err)\n}\n")),(0,o.kt)("p",null,"\u73b0\u5728\uff0c\u5728\u6211\u4eec\u4ee5\u539f\u59cb\u5b57\u8282\u683c\u5f0f\u83b7\u53d6\u4e8b\u52a1\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u521d\u59cb\u5316\u4e00\u4e2a",(0,o.kt)("inlineCode",{parentName:"p"},"types.Transactions"),"\u7c7b\u578b\uff0c\u5e76\u5c06\u7b7e\u540d\u540e\u7684\u4ea4\u6613\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u503c\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"ts := types.Transactions{signedTx}\n")),(0,o.kt)("p",null,"\u8fd9\u6837\u505a\u7684\u539f\u56e0\u662f\u56e0\u4e3a",(0,o.kt)("inlineCode",{parentName:"p"},"Transactions"),"\u7c7b\u578b\u63d0\u4f9b\u4e86\u4e00\u4e2a",(0,o.kt)("inlineCode",{parentName:"p"},"GetRlp"),"\u65b9\u6cd5\uff0c\u7528\u4e8e\u4ee5RLP\u7f16\u7801\u683c\u5f0f\u8fd4\u56de\u4e8b\u52a1\u3002 RLP\u662f\u4ee5\u592a\u574a\u7528\u4e8e\u5e8f\u5217\u5316\u5bf9\u8c61\u7684\u7279\u6b8a\u7f16\u7801\u65b9\u6cd5\u3002 \u7ed3\u679c\u662f\u539f\u59cb\u5b57\u8282\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"rawTxBytes := ts.GetRlp(0)\n")),(0,o.kt)("p",null,"\u6700\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u975e\u5e38\u8f7b\u677e\u5730\u5c06\u539f\u59cb\u5b57\u8282\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"rawTxHex := hex.EncodeToString(rawTxBytes)\n\nfmt.Printf(rawTxHex)\n// f86d8202b38477359400825208944592d8f8d7b001e72cb26a73e4fa1806a51ac79d880de0b6b3a7640000802ba0699ff162205967ccbabae13e07cdd4284258d46ec1051a70a51be51ec2bc69f3a04e6944d508244ea54a62ebf9a72683eeadacb73ad7c373ee542f1998147b220e\n")),(0,o.kt)("p",null,"\u63a5\u4e0b\u6765\uff0c\u4f60\u5c31\u53ef\u4ee5\u5e7f\u64ad\u539f\u59cb\u4ea4\u6613\u6570\u636e\u3002\u5728",(0,o.kt)("a",{parentName:"p",href:"../transaction-raw-send"},"\u4e0b\u4e00\u7ae0")," \u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u5e7f\u64ad\u4e00\u4e2a\u539f\u59cb\u4ea4\u6613\u3002"),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"\u5b8c\u6574\u4ee3\u7801"},"\u5b8c\u6574\u4ee3\u7801"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/mhxw/ethereum-development-with-go-book/blob/main/code/transaction_raw_create.go"},"transaction_raw_create.go")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "context"\n    "crypto/ecdsa"\n    "encoding/hex"\n    "fmt"\n    "log"\n    "math/big"\n\n    "github.com/ethereum/go-ethereum/common"\n    "github.com/ethereum/go-ethereum/core/types"\n    "github.com/ethereum/go-ethereum/crypto"\n    "github.com/ethereum/go-ethereum/ethclient"\n)\n\nfunc main() {\n    client, err := ethclient.Dial("https://rinkeby.infura.io")\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    privateKey, err := crypto.HexToECDSA("fad9c8855b740a0b7ed4c221dbad0f33a83a49cad6b3fe8d5817ac83d38b6a19")\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    publicKey := privateKey.Public()\n    publicKeyECDSA, ok := publicKey.(*ecdsa.PublicKey)\n    if !ok {\n        log.Fatal("cannot assert type: publicKey is not of type *ecdsa.PublicKey")\n    }\n\n    fromAddress := crypto.PubkeyToAddress(*publicKeyECDSA)\n    nonce, err := client.PendingNonceAt(context.Background(), fromAddress)\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    value := big.NewInt(1000000000000000000) // in wei (1 eth)\n    gasLimit := uint64(21000)                // in units\n    gasPrice, err := client.SuggestGasPrice(context.Background())\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    toAddress := common.HexToAddress("0x4592d8f8d7b001e72cb26a73e4fa1806a51ac79d")\n    var data []byte\n    tx := types.NewTransaction(nonce, toAddress, value, gasLimit, gasPrice, data)\n\n    chainID, err := client.NetworkID(context.Background())\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    signedTx, err := types.SignTx(tx, types.NewEIP155Signer(chainID), privateKey)\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    ts := types.Transactions{signedTx}\n    rawTxBytes := ts.GetRlp(0)\n    rawTxHex := hex.EncodeToString(rawTxBytes)\n\n    fmt.Printf(rawTxHex) // f86...772\n}\n')))}m.isMDXComponent=!0}}]);