"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[217],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),d=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},s=function(e){var n=d(e.components);return r.createElement(i.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=d(t),m=a,g=u["".concat(i,".").concat(m)]||u[m]||p[m]||o;return t?r.createElement(g,c(c({ref:n},s),{},{components:t})):r.createElement(g,c({ref:n},s))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,c=new Array(o);c[0]=u;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,c[1]=l;for(var d=2;d<o;d++)c[d]=t[d];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},5504:function(e,n,t){t.r(n),t.d(n,{assets:function(){return s},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return p}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),c=["components"],l={"\u6982\u8ff0":"\u7528Go\u5411\u5176\u4ed6\u94b1\u5305\u8d26\u53f7\u6216\u8005\u667a\u80fd\u5408\u7ea6\u53d1\u9001ERC-20\u4ee3\u5e01\u7684\u6559\u7a0b\u3002"},i="\u4ee3\u5e01\u7684\u8f6c\u8d26",d={unversionedId:"zh/transfer-tokens/README",id:"zh/transfer-tokens/README",title:"\u4ee3\u5e01\u7684\u8f6c\u8d26",description:"\u672c\u8282\u5c06\u5411\u4f60\u4ecb\u7ecd\u5982\u4f55\u8f6c\u79fbERC-20\u4ee3\u5e01\u3002\u4e86\u89e3\u5982\u4f55\u8f6c\u79fb\u975eERC-20\u517c\u5bb9\u7684\u5176\u4ed6\u7c7b\u578b\u7684\u4ee3\u5e01\u8bf7\u67e5\u9605\u667a\u80fd\u5408\u7ea6\u7684\u7ae0\u8282 \u6765\u4e86\u89e3\u5982\u4f55\u4e0e\u667a\u80fd\u5408\u7ea6\u4ea4\u4e92\u3002",source:"@site/docs/zh/transfer-tokens/README.md",sourceDirName:"zh/transfer-tokens",slug:"/zh/transfer-tokens/",permalink:"/ethereum-development-with-go-book/docs/zh/transfer-tokens/",editUrl:"https://github.com/mhxw/ethereum-development-with-go-book/tree/dev/docs/zh/transfer-tokens/README.md",tags:[],version:"current",frontMatter:{"\u6982\u8ff0":"\u7528Go\u5411\u5176\u4ed6\u94b1\u5305\u8d26\u53f7\u6216\u8005\u667a\u80fd\u5408\u7ea6\u53d1\u9001ERC-20\u4ee3\u5e01\u7684\u6559\u7a0b\u3002"},sidebar:"zh",previous:{title:"\u8f6c\u8d26\u4ee5\u592a\u5e01ETH",permalink:"/ethereum-development-with-go-book/docs/zh/transfer-eth/"},next:{title:"\u8ba2\u9605\u65b0\u533a\u5757",permalink:"/ethereum-development-with-go-book/docs/zh/block-subscribe/"}},s={},p=[{value:"\u5b8c\u6574\u4ee3\u7801",id:"\u5b8c\u6574\u4ee3\u7801",level:3}],u={toc:p};function m(e){var n=e.components,t=(0,a.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"\u4ee3\u5e01\u7684\u8f6c\u8d26"},"\u4ee3\u5e01\u7684\u8f6c\u8d26"),(0,o.kt)("p",null,"\u672c\u8282\u5c06\u5411\u4f60\u4ecb\u7ecd\u5982\u4f55\u8f6c\u79fbERC-20\u4ee3\u5e01\u3002\u4e86\u89e3\u5982\u4f55\u8f6c\u79fb\u975eERC-20\u517c\u5bb9\u7684\u5176\u4ed6\u7c7b\u578b\u7684\u4ee3\u5e01\u8bf7\u67e5\u9605",(0,o.kt)("a",{parentName:"p",href:"../smart-contracts"},"\u667a\u80fd\u5408\u7ea6\u7684\u7ae0\u8282")," \u6765\u4e86\u89e3\u5982\u4f55\u4e0e\u667a\u80fd\u5408\u7ea6\u4ea4\u4e92\u3002"),(0,o.kt)("p",null,"\u5047\u8bbe\u60a8\u5df2\u8fde\u63a5\u5ba2\u6237\u7aef\uff0c\u52a0\u8f7d\u79c1\u94a5\u5e76\u914d\u7f6e\u71c3\u6c14\u4ef7\u683c\uff0c\u4e0b\u4e00\u6b65\u662f\u8bbe\u7f6e\u5177\u4f53\u7684\u4ea4\u6613\u6570\u636e\u5b57\u6bb5\u3002 \u5982\u679c\u4f60\u5b8c\u5168\u4e0d\u660e\u767d\u6211\u521a\u8bb2\u7684\u8fd9\u4e9b\uff0c\u8bf7\u5148\u590d\u4e60 ",(0,o.kt)("a",{parentName:"p",href:"../transfer-eth"},"\u4ee5\u592a\u5e01\u8f6c\u8d26\u7684\u7ae0\u8282"),"\u3002"),(0,o.kt)("p",null,"\u4ee3\u5e01\u4f20\u8f93\u4e0d\u9700\u8981\u4f20\u8f93ETH\uff0c\u56e0\u6b64\u5c06\u4ea4\u6613\u201c\u503c\u201d\u8bbe\u7f6e\u4e3a\u201c0\u201d\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"value := big.NewInt(0)\n")),(0,o.kt)("p",null,"\u5148\u5c06\u60a8\u8981\u53d1\u9001\u4ee3\u5e01\u7684\u5730\u5740\u5b58\u50a8\u5728\u53d8\u91cf\u4e2d\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'toAddress := common.HexToAddress("0x4592d8f8d7b001e72cb26a73e4fa1806a51ac79d")\n')),(0,o.kt)("p",null,"\u73b0\u5728\u8f6e\u5230\u6709\u8da3\u7684\u90e8\u5206\u3002 \u6211\u4eec\u9700\u8981\u5f04\u6e05\u695a\u4ea4\u6613\u7684 ",(0,o.kt)("em",{parentName:"p"},"data")," \u90e8\u5206\u3002 \u8fd9\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u627e\u51fa\u6211\u4eec\u5c06\u8981\u8c03\u7528\u7684\u667a\u80fd\u5408\u7ea6\u51fd\u6570\u540d\uff0c\u4ee5\u53ca\u51fd\u6570\u5c06\u63a5\u6536\u7684\u8f93\u5165\u3002 \u7136\u540e\u6211\u4eec\u4f7f\u7528\u51fd\u6570\u540d\u7684keccak-256\u54c8\u5e0c\u6765\u68c0\u7d22 ",(0,o.kt)("em",{parentName:"p"},"\u65b9\u6cd5ID"),"\uff0c\u5b83\u662f\u524d8\u4e2a\u5b57\u7b26\uff084\u4e2a\u5b57\u8282\uff09\u3002 \u7136\u540e\uff0c\u6211\u4eec\u9644\u52a0\u6211\u4eec\u53d1\u9001\u7684\u5730\u5740\uff0c\u5e76\u9644\u52a0\u6211\u4eec\u6253\u7b97\u8f6c\u8d26\u7684\u4ee3\u5e01\u6570\u91cf\u3002 \u8fd9\u4e9b\u8f93\u5165\u9700\u8981256\u4f4d\u957f\uff0832\u5b57\u8282\uff09\u5e76\u586b\u5145\u5de6\u4fa7\u3002 \u65b9\u6cd5ID\u4e0d\u9700\u586b\u5145\u3002"),(0,o.kt)("p",null,"\u4e3a\u4e86\u6f14\u793a\uff0c\u6211\u521b\u9020\u4e86\u4e00\u4e2a\u65b0\u7684\u4ee3\u5e01(HelloToken HTN)\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u4ee3\u5e01\u5de5\u5382\u670d\u52a1\u6765\u5b8c\u6210",(0,o.kt)("a",{parentName:"p",href:"https://tokenfactory.surge.sh/"},"https://tokenfactory.surge.sh"),", \u4ee3\u5e01\u6211\u90e8\u7f72\u5230\u4e86Rinkeby\u6d4b\u8bd5\u7f51\u3002"),(0,o.kt)("p",null,"\u8ba9\u6211\u4eec\u5c06\u4ee3\u5e01\u5408\u7ea6\u5730\u5740\u5206\u914d\u7ed9\u53d8\u91cf\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'tokenAddress := common.HexToAddress("0x28b149020d2152179873ec60bed6bf7cd705775d")\n')),(0,o.kt)("p",null,"\u51fd\u6570\u540d\u5c06\u662f\u4f20\u9012\u51fd\u6570\u7684\u540d\u79f0\uff0c\u5373ERC-20\u89c4\u8303\u4e2d\u7684",(0,o.kt)("inlineCode",{parentName:"p"},"transfer"),"\u548c\u53c2\u6570\u7c7b\u578b\u3002 \u7b2c\u4e00\u4e2a\u53c2\u6570\u7c7b\u578b\u662f",(0,o.kt)("inlineCode",{parentName:"p"},"address"),"\uff08\u4ee4\u724c\u7684\u63a5\u6536\u8005\uff09\uff0c\u7b2c\u4e8c\u4e2a\u7c7b\u578b\u662f",(0,o.kt)("inlineCode",{parentName:"p"},"uint256"),"\uff08\u8981\u53d1\u9001\u7684\u4ee3\u5e01\u6570\u91cf\uff09\u3002 \u4e0d\u9700\u8981\u6ca1\u6709\u7a7a\u683c\u548c\u53c2\u6570\u540d\u79f0\u3002 \u6211\u4eec\u8fd8\u9700\u8981\u7528\u5b57\u8282\u5207\u7247\u683c\u5f0f\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'transferFnSignature := []byte("transfer(address,uint256)")\n')),(0,o.kt)("p",null,"\u6211\u4eec\u73b0\u5728\u5c06\u4ecego-ethereum\u5bfc\u5165",(0,o.kt)("inlineCode",{parentName:"p"},"crypto/sha3"),"\u5305\u4ee5\u751f\u6210\u51fd\u6570\u7b7e\u540d\u7684Keccak256\u54c8\u5e0c\u3002 \u7136\u540e\u6211\u4eec\u53ea\u4f7f\u7528\u524d4\u4e2a\u5b57\u8282\u6765\u83b7\u53d6\u65b9\u6cd5ID\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"hash := sha3.NewKeccak256()\nhash.Write(transferFnSignature)\nmethodID := hash.Sum(nil)[:4]\nfmt.Println(hexutil.Encode(methodID)) // 0xa9059cbb\n")),(0,o.kt)("p",null,"\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u9700\u8981\u5c06\u7ed9\u6211\u4eec\u53d1\u9001\u4ee3\u5e01\u7684\u5730\u5740\u5de6\u586b\u5145\u523032\u5b57\u8282\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"paddedAddress := common.LeftPadBytes(toAddress.Bytes(), 32)\nfmt.Println(hexutil.Encode(paddedAddress)) // 0x0000000000000000000000004592d8f8d7b001e72cb26a73e4fa1806a51ac79d\n")),(0,o.kt)("p",null,"\u63a5\u4e0b\u6765\u6211\u4eec\u786e\u5b9a\u8981\u53d1\u9001\u591a\u5c11\u4e2a\u4ee3\u5e01\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u91cc\u662f1,000\u4e2a\uff0c\u5e76\u4e14\u6211\u4eec\u9700\u8981\u5728",(0,o.kt)("inlineCode",{parentName:"p"},"big.Int"),"\u4e2d\u683c\u5f0f\u5316\u4e3awei\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'amount := new(big.Int)\namount.SetString("1000000000000000000000", 10) // 1000 tokens\n')),(0,o.kt)("p",null,"\u4ee3\u5e01\u91cf\u4e5f\u9700\u8981\u5de6\u586b\u5145\u523032\u4e2a\u5b57\u8282\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"paddedAmount := common.LeftPadBytes(amount.Bytes(), 32)\nfmt.Println(hexutil.Encode(paddedAmount))  // 0x00000000000000000000000000000000000000000000003635c9adc5dea00000\n")),(0,o.kt)("p",null,"\u63a5\u4e0b\u6765\u6211\u4eec\u53ea\u9700\u5c06\u65b9\u6cd5ID\uff0c\u586b\u5145\u540e\u7684\u5730\u5740\u548c\u586b\u540e\u7684\u8f6c\u8d26\u91cf\uff0c\u63a5\u5230\u5c06\u6210\u4e3a\u6211\u4eec\u6570\u636e\u5b57\u6bb5\u7684\u5b57\u8282\u7247\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"var data []byte\ndata = append(data, methodID...)\ndata = append(data, paddedAddress...)\ndata = append(data, paddedAmount...)\n")),(0,o.kt)("p",null,"\u71c3\u6c14\u4e0a\u9650\u5236\u5c06\u53d6\u51b3\u4e8e\u4ea4\u6613\u6570\u636e\u7684\u5927\u5c0f\u548c\u667a\u80fd\u5408\u7ea6\u5fc5\u987b\u6267\u884c\u7684\u8ba1\u7b97\u6b65\u9aa4\u3002 \u5e78\u8fd0\u7684\u662f\uff0c\u5ba2\u6237\u7aef\u63d0\u4f9b\u4e86",(0,o.kt)("inlineCode",{parentName:"p"},"EstimateGas"),"\u65b9\u6cd5\uff0c\u5b83\u53ef\u4ee5\u4e3a\u6211\u4eec\u4f30\u7b97\u6240\u9700\u7684\u71c3\u6c14\u91cf\u3002 \u8fd9\u4e2a\u51fd\u6570\u4ece",(0,o.kt)("inlineCode",{parentName:"p"},"ethereum"),"\u5305\u4e2d\u83b7\u53d6",(0,o.kt)("inlineCode",{parentName:"p"},"CallMsg"),"\u7ed3\u6784\uff0c\u6211\u4eec\u5728\u5176\u4e2d\u6307\u5b9a\u6570\u636e\u548c\u5730\u5740\u3002 \u5b83\u5c06\u8fd4\u56de\u6211\u4eec\u4f30\u7b97\u7684\u5b8c\u6210\u4ea4\u6613\u6240\u9700\u7684\u4f30\u8ba1\u71c3\u6c14\u4e0a\u9650\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"gasLimit, err := client.EstimateGas(context.Background(), ethereum.CallMsg{\n  To:   &toAddress,\n  Data: data,\n})\nif err != nil {\n  log.Fatal(err)\n}\n\nfmt.Println(gasLimit) // 23256\n")),(0,o.kt)("p",null,"\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u505a\u7684\u662f\u6784\u5efa\u4ea4\u6613\u4e8b\u52a1\u7c7b\u578b\uff0c\u8fd9\u7c7b\u4f3c\u4e8e\u60a8\u5728ETH\u8f6c\u8d26\u90e8\u5206\u4e2d\u770b\u5230\u7684\uff0c\u9664\u4e86",(0,o.kt)("em",{parentName:"p"},"to"),"\u5b57\u6bb5\u5c06\u662f\u4ee3\u5e01\u667a\u80fd\u5408\u7ea6\u5730\u5740\u3002 \u8fd9\u4e2a\u5e38\u8ba9\u4eba\u56f0\u60d1\u3002\u6211\u4eec\u8fd8\u5fc5\u987b\u5728\u8c03\u7528\u4e2d\u5305\u542b0 ETH\u7684\u503c\u5b57\u6bb5\u548c\u521a\u521a\u751f\u6210\u7684\u6570\u636e\u5b57\u8282\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"tx := types.NewTransaction(nonce, tokenAddress, value, gasLimit, gasPrice, data)\n")),(0,o.kt)("p",null,"\u4e0b\u4e00\u6b65\u662f\u4f7f\u7528\u53d1\u4ef6\u4eba\u7684\u79c1\u94a5\u5bf9\u4e8b\u52a1\u8fdb\u884c\u7b7e\u540d\u3002 ",(0,o.kt)("inlineCode",{parentName:"p"},"SignTx"),"\u65b9\u6cd5\u9700\u8981EIP155\u7b7e\u540d\u5668(EIP155 signer)\uff0c\u8fd9\u9700\u8981\u6211\u4eec\u4ece\u5ba2\u6237\u7aef\u62ff\u5230\u94feID\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"chainID, err := client.NetworkID(context.Background())\nif err != nil {\n  log.Fatal(err)\n}\n\nsignedTx, err := types.SignTx(tx, types.NewEIP155Signer(chainID), privateKey)\nif err != nil {\n  log.Fatal(err)\n}\n")),(0,o.kt)("p",null,"\u6700\u540e\u5e7f\u64ad\u4ea4\u6613\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'err = client.SendTransaction(context.Background(), signedTx)\nif err != nil {\n  log.Fatal(err)\n}\n\nfmt.Printf("tx sent: %s", signedTx.Hash().Hex()) // tx sent: 0xa56316b637a94c4cc0331c73ef26389d6c097506d581073f927275e7a6ece0bc\n')),(0,o.kt)("p",null,"\u4f60\u53ef\u4ee5\u53bbEtherscan\u770b\u4ea4\u6613\u7684\u786e\u8ba4\u8fc7\u7a0b: ",(0,o.kt)("a",{parentName:"p",href:"https://rinkeby.etherscan.io/tx/0xa56316b637a94c4cc0331c73ef26389d6c097506d581073f927275e7a6ece0bc"},"https://rinkeby.etherscan.io/tx/0xa56316b637a94c4cc0331c73ef26389d6c097506d581073f927275e7a6ece0bc")),(0,o.kt)("p",null,"\u8981\u4e86\u89e3\u66f4\u591a\u5982\u4f55\u52a0\u8f7dERC20\u667a\u80fd\u5408\u7ea6\u5e76\u4e0e\u4e4b\u4e92\u52a8\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u67e5\u770b",(0,o.kt)("a",{parentName:"p",href:"../smart-contract-read-erc20"},"ERC20\u4ee3\u5e01\u7684\u667a\u80fd\u5408\u7ea6\u7ae0\u8282"),"."),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"\u5b8c\u6574\u4ee3\u7801"},"\u5b8c\u6574\u4ee3\u7801"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/mhxw/ethereum-development-with-go-book/blob/main/code/transfer_tokens.go"},"transfer_tokens.go")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "context"\n    "crypto/ecdsa"\n    "fmt"\n    "log"\n    "math/big"\n\n    "github.com/ethereum/go-ethereum"\n    "github.com/ethereum/go-ethereum/common"\n    "github.com/ethereum/go-ethereum/common/hexutil"\n    "github.com/ethereum/go-ethereum/core/types"\n    "github.com/ethereum/go-ethereum/crypto"\n    "github.com/ethereum/go-ethereum/crypto/sha3"\n    "github.com/ethereum/go-ethereum/ethclient"\n)\n\nfunc main() {\n    client, err := ethclient.Dial("https://rinkeby.infura.io")\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    privateKey, err := crypto.HexToECDSA("fad9c8855b740a0b7ed4c221dbad0f33a83a49cad6b3fe8d5817ac83d38b6a19")\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    publicKey := privateKey.Public()\n    publicKeyECDSA, ok := publicKey.(*ecdsa.PublicKey)\n    if !ok {\n        log.Fatal("cannot assert type: publicKey is not of type *ecdsa.PublicKey")\n    }\n\n    fromAddress := crypto.PubkeyToAddress(*publicKeyECDSA)\n    nonce, err := client.PendingNonceAt(context.Background(), fromAddress)\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    value := big.NewInt(0) // in wei (0 eth)\n    gasPrice, err := client.SuggestGasPrice(context.Background())\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    toAddress := common.HexToAddress("0x4592d8f8d7b001e72cb26a73e4fa1806a51ac79d")\n    tokenAddress := common.HexToAddress("0x28b149020d2152179873ec60bed6bf7cd705775d")\n\n    transferFnSignature := []byte("transfer(address,uint256)")\n    hash := sha3.NewKeccak256()\n    hash.Write(transferFnSignature)\n    methodID := hash.Sum(nil)[:4]\n    fmt.Println(hexutil.Encode(methodID)) // 0xa9059cbb\n\n    paddedAddress := common.LeftPadBytes(toAddress.Bytes(), 32)\n    fmt.Println(hexutil.Encode(paddedAddress)) // 0x0000000000000000000000004592d8f8d7b001e72cb26a73e4fa1806a51ac79d\n\n    amount := new(big.Int)\n    amount.SetString("1000000000000000000000", 10) // 1000 tokens\n    paddedAmount := common.LeftPadBytes(amount.Bytes(), 32)\n    fmt.Println(hexutil.Encode(paddedAmount)) // 0x00000000000000000000000000000000000000000000003635c9adc5dea00000\n\n    var data []byte\n    data = append(data, methodID...)\n    data = append(data, paddedAddress...)\n    data = append(data, paddedAmount...)\n\n    gasLimit, err := client.EstimateGas(context.Background(), ethereum.CallMsg{\n        To:   &toAddress,\n        Data: data,\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n    fmt.Println(gasLimit) // 23256\n\n    tx := types.NewTransaction(nonce, tokenAddress, value, gasLimit, gasPrice, data)\n\n    chainID, err := client.NetworkID(context.Background())\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    signedTx, err := types.SignTx(tx, types.NewEIP155Signer(chainID), privateKey)\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    err = client.SendTransaction(context.Background(), signedTx)\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    fmt.Printf("tx sent: %s", signedTx.Hash().Hex()) // tx sent: 0xa56316b637a94c4cc0331c73ef26389d6c097506d581073f927275e7a6ece0bc\n}\n')))}m.isMDXComponent=!0}}]);