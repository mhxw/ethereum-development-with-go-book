"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9874],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return g}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(t),g=i,p=d["".concat(s,".").concat(g)]||d[g]||m[g]||a;return t?r.createElement(p,o(o({ref:n},u),{},{components:t})):r.createElement(p,o({ref:n},u))}));function g(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8435:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return s},default:function(){return g},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return m}});var r=t(7462),i=t(3366),a=(t(7294),t(3905)),o=["components"],l={"\u6982\u8ff0":"\u4e00\u7ec4\u7528Go\u7684\u597d\u7528\u7684\u5de5\u5177\u51fd\u6570\u3002"},s="\u5de5\u5177\u51fd\u6570\u96c6",c={unversionedId:"zh/util-go/README",id:"zh/util-go/README",title:"\u5de5\u5177\u51fd\u6570\u96c6",description:"\u51fd\u6570\u7684\u5b9e\u73b0\u53ef\u4ee5\u5728\u8fd9\u91cc. \u5b83\u4eec\u4e00\u822c\u63a5\u53e3\u6bd4\u8f83\u901a\u7528. \u8fd9\u91cc\u6211\u4eec\u5148\u770b\u51e0\u4e2a\u4f8b\u5b50\u3002",source:"@site/docs/zh/util-go/README.md",sourceDirName:"zh/util-go",slug:"/zh/util-go/",permalink:"/ethereum-development-with-go-book/docs/zh/util-go/",editUrl:"https://github.com/mhxw/ethereum-development-with-go-book/tree/dev/docs/zh/util-go/README.md",tags:[],version:"current",frontMatter:{"\u6982\u8ff0":"\u4e00\u7ec4\u7528Go\u7684\u597d\u7528\u7684\u5de5\u5177\u51fd\u6570\u3002"},sidebar:"zh",previous:{title:"\u5de5\u5177\u51fd\u6570",permalink:"/ethereum-development-with-go-book/docs/zh/util/"},next:{title:"\u8bcd\u6c47\u8868",permalink:"/ethereum-development-with-go-book/docs/zh/GLOSSARY"}},u={},m=[{value:"\u5b8c\u6574\u4ee3\u7801",id:"\u5b8c\u6574\u4ee3\u7801",level:3}],d={toc:m};function g(e){var n=e.components,t=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u5de5\u5177\u51fd\u6570\u96c6"},"\u5de5\u5177\u51fd\u6570\u96c6"),(0,a.kt)("p",null,"\u51fd\u6570\u7684\u5b9e\u73b0\u53ef\u4ee5\u5728",(0,a.kt)("a",{parentName:"p",href:"#full-code"},"\u8fd9\u91cc"),". \u5b83\u4eec\u4e00\u822c\u63a5\u53e3\u6bd4\u8f83\u901a\u7528. \u8fd9\u91cc\u6211\u4eec\u5148\u770b\u51e0\u4e2a\u4f8b\u5b50\u3002"),(0,a.kt)("p",null,"\u68c0\u67e5\u5730\u5740\u662f\u5426\u662f\u6709\u6548\u7684\u4ee5\u592a\u574a\u5730\u5740:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'valid := util.IsValidAddress("0x323b5d4c32345ced77393b3530b1eed0f346429d")\nfmt.Println(valid) // true\n')),(0,a.kt)("p",null,"\u68c0\u67e5\u5730\u5740\u662f\u5426\u4e3a\u96f6\u5730\u5740:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'zeroed := util.IsZeroAddress("0x0")\nfmt.Println(zeroed) // true\n')),(0,a.kt)("p",null,"\u5c06\u5c0f\u6570\u8f6c\u6362\u4e3awei(\u6574\u6570\uff09\u3002 \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u5c0f\u6570\u4f4d\u6570\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"wei := util.ToWei(0.02, 18)\nfmt.Println(wei) // 20000000000000000\n")),(0,a.kt)("p",null,"\u5c06wei\uff08\u6574\u6570\uff09\u8f6c\u6362\u4e3a\u5c0f\u6570\u3002 \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u5c0f\u6570\u4f4d\u6570\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'wei := new(big.Int)\nwei.SetString("20000000000000000", 10)\neth := util.ToDecimal(wei, 18)\nfmt.Println(eth) // 0.02\n')),(0,a.kt)("p",null,"\u6839\u636e\u71c3\u6c14\u4e0a\u9650\u548c\u71c3\u6c14\u4ef7\u683c\u8ba1\u7b97\u71c3\u6c14\u82b1\u8d39\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'gasLimit := uint64(21000)\ngasPrice := new(big.Int)\ngasPrice.SetString("2000000000", 10)\ngasCost := util.CalcGasCost(gasLimit, gasPrice)\nfmt.Println(gasCost) // 42000000000000\n')),(0,a.kt)("p",null,"\u4ece\u7b7e\u540d\u4e2d\u63d0\u53d6R\uff0cS\u548cV\u503c\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'sig := "0x789a80053e4927d0a898db8e065e948f5cf086e32f9ccaa54c1908e22ac430c62621578113ddbb62d509bf6049b8fb544ab06d36f916685a2eb8e57ffadde02301"\nr, s, v := util.SigRSV(sig)\nfmt.Println(hexutil.Encode(r[:])[2:]) // 789a80053e4927d0a898db8e065e948f5cf086e32f9ccaa54c1908e22ac430c6\nfmt.Println(hexutil.Encode(s[:])[2:]) // 2621578113ddbb62d509bf6049b8fb544ab06d36f916685a2eb8e57ffadde023\nfmt.Println(v)                        // 28\n')),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"\u5b8c\u6574\u4ee3\u7801"},"\u5b8c\u6574\u4ee3\u7801"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/mhxw/ethereum-development-with-go-book/blob/main/code/util/util.go"},"util.go")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package util\n\nimport (\n    "math/big"\n    "reflect"\n    "regexp"\n    "strconv"\n\n    "github.com/ethereum/go-ethereum/common"\n    "github.com/ethereum/go-ethereum/common/hexutil"\n    "github.com/shopspring/decimal"\n)\n\n// IsValidAddress validate hex address\nfunc IsValidAddress(iaddress interface{}) bool {\n    re := regexp.MustCompile("^0x[0-9a-fA-F]{40}$")\n    switch v := iaddress.(type) {\n    case string:\n        return re.MatchString(v)\n    case common.Address:\n        return re.MatchString(v.Hex())\n    default:\n        return false\n    }\n}\n\n// IsZeroAddress validate if it\'s a 0 address\nfunc IsZeroAddress(iaddress interface{}) bool {\n    var address common.Address\n    switch v := iaddress.(type) {\n    case string:\n        address = common.HexToAddress(v)\n    case common.Address:\n        address = v\n    default:\n        return false\n    }\n\n    zeroAddressBytes := common.FromHex("0x0000000000000000000000000000000000000000")\n    addressBytes := address.Bytes()\n    return reflect.DeepEqual(addressBytes, zeroAddressBytes)\n}\n\n// ToDecimal wei to decimals\nfunc ToDecimal(ivalue interface{}, decimals int) decimal.Decimal {\n    value := new(big.Int)\n    switch v := ivalue.(type) {\n    case string:\n        value.SetString(v, 10)\n    case *big.Int:\n        value = v\n    }\n\n    mul := decimal.NewFromFloat(float64(10)).Pow(decimal.NewFromFloat(float64(decimals)))\n    num, _ := decimal.NewFromString(value.String())\n    result := num.Div(mul)\n\n    return result\n}\n\n// ToWei decimals to wei\nfunc ToWei(iamount interface{}, decimals int) *big.Int {\n    amount := decimal.NewFromFloat(0)\n    switch v := iamount.(type) {\n    case string:\n        amount, _ = decimal.NewFromString(v)\n    case float64:\n        amount = decimal.NewFromFloat(v)\n    case int64:\n        amount = decimal.NewFromFloat(float64(v))\n    case decimal.Decimal:\n        amount = v\n    case *decimal.Decimal:\n        amount = *v\n    }\n\n    mul := decimal.NewFromFloat(float64(10)).Pow(decimal.NewFromFloat(float64(decimals)))\n    result := amount.Mul(mul)\n\n    wei := new(big.Int)\n    wei.SetString(result.String(), 10)\n\n    return wei\n}\n\n// CalcGasCost calculate gas cost given gas limit (units) and gas price (wei)\nfunc CalcGasCost(gasLimit uint64, gasPrice *big.Int) *big.Int {\n    gasLimitBig := big.NewInt(int64(gasLimit))\n    return gasLimitBig.Mul(gasLimitBig, gasPrice)\n}\n\n// SigRSV signatures R S V returned as arrays\nfunc SigRSV(isig interface{}) ([32]byte, [32]byte, uint8) {\n    var sig []byte\n    switch v := isig.(type) {\n    case []byte:\n        sig = v\n    case string:\n        sig, _ = hexutil.Decode(v)\n    }\n\n    sigstr := common.Bytes2Hex(sig)\n    rS := sigstr[0:64]\n    sS := sigstr[64:128]\n    R := [32]byte{}\n    S := [32]byte{}\n    copy(R[:], common.FromHex(rS))\n    copy(S[:], common.FromHex(sS))\n    vStr := sigstr[128:130]\n    vI, _ := strconv.Atoi(vStr)\n    V := uint8(vI + 27)\n\n    return R, S, V\n}\n')),(0,a.kt)("p",null,"test file: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/mhxw/ethereum-development-with-go-book/blob/main/code/util/util_test.go"},"util_test.go")))}g.isMDXComponent=!0}}]);