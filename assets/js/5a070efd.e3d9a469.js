"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3858],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return g}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=p(t),g=a,f=d["".concat(l,".").concat(g)]||d[g]||u[g]||o;return t?r.createElement(f,c(c({ref:n},s),{},{components:t})):r.createElement(f,c({ref:n},s))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,c=new Array(o);c[0]=d;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var p=2;p<o;p++)c[p]=t[p];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6205:function(e,n,t){t.r(n),t.d(n,{assets:function(){return s},contentTitle:function(){return l},default:function(){return g},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return u}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),c=["components"],i={"\u6982\u8ff0":"\u7528Go\u6765\u5411\u53e6\u5916\u4e00\u4e2a\u94b1\u5305\u5730\u5740\u6216\u8005\u5408\u7ea6\u8f6c\u8d26\u4ee5\u592a\u5e01\u7684\u6559\u7a0b\u3002"},l="\u8f6c\u8d26\u4ee5\u592a\u5e01ETH",p={unversionedId:"zh/transfer-eth/README",id:"zh/transfer-eth/README",title:"\u8f6c\u8d26\u4ee5\u592a\u5e01ETH",description:"\u5728\u672c\u8bfe\u7a0b\u4e2d\uff0c\u60a8\u5c06\u5b66\u4e60\u5982\u4f55\u5c06ETH\u4ece\u4e00\u4e2a\u5e10\u6237\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u5e10\u6237\u3002\u5982\u679c\u60a8\u5df2\u719f\u6089\u4ee5\u592a\u574a\uff0c\u90a3\u4e48\u60a8\u5c31\u77e5\u9053\u5982\u4f55\u4ea4\u6613\u5305\u62ec\u60a8\u6253\u7b97\u8f6c\u8d26\u7684\u4ee5\u592a\u5e01\u6570\u91cf\u91cf\uff0c\u71c3\u6c14\u9650\u989d\uff0c\u71c3\u6c14\u4ef7\u683c\uff0c\u4e00\u4e2a\u968f\u673a\u6570(nonce)\uff0c\u63a5\u6536\u5730\u5740\u4ee5\u53ca\u53ef\u9009\u62e9\u6027\u7684\u6dfb\u52a0\u7684\u6570\u636e\u3002 \u5728\u5e7f\u544a\u53d1\u9001\u5230\u7f51\u7edc\u4e4b\u524d\uff0c\u5fc5\u987b\u4f7f\u7528\u53d1\u9001\u65b9\u7684\u79c1\u94a5\u5bf9\u8be5\u4ea4\u6613\u8fdb\u884c\u7b7e\u540d\u3002",source:"@site/docs/zh/transfer-eth/README.md",sourceDirName:"zh/transfer-eth",slug:"/zh/transfer-eth/",permalink:"/ethereum-development-with-go-book/docs/zh/transfer-eth/",editUrl:"https://github.com/mhxw/ethereum-development-with-go-book/tree/dev/docs/zh/transfer-eth/README.md",tags:[],version:"current",frontMatter:{"\u6982\u8ff0":"\u7528Go\u6765\u5411\u53e6\u5916\u4e00\u4e2a\u94b1\u5305\u5730\u5740\u6216\u8005\u5408\u7ea6\u8f6c\u8d26\u4ee5\u592a\u5e01\u7684\u6559\u7a0b\u3002"},sidebar:"zh",previous:{title:"\u67e5\u8be2\u4ea4\u6613",permalink:"/ethereum-development-with-go-book/docs/zh/transaction-query/"},next:{title:"\u4ee3\u5e01\u7684\u8f6c\u8d26",permalink:"/ethereum-development-with-go-book/docs/zh/transfer-tokens/"}},s={},u=[{value:"\u5b8c\u6574\u4ee3\u7801",id:"\u5b8c\u6574\u4ee3\u7801",level:3}],d={toc:u};function g(e){var n=e.components,t=(0,a.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"\u8f6c\u8d26\u4ee5\u592a\u5e01eth"},"\u8f6c\u8d26\u4ee5\u592a\u5e01ETH"),(0,o.kt)("p",null,"\u5728\u672c\u8bfe\u7a0b\u4e2d\uff0c\u60a8\u5c06\u5b66\u4e60\u5982\u4f55\u5c06ETH\u4ece\u4e00\u4e2a\u5e10\u6237\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u5e10\u6237\u3002\u5982\u679c\u60a8\u5df2\u719f\u6089\u4ee5\u592a\u574a\uff0c\u90a3\u4e48\u60a8\u5c31\u77e5\u9053\u5982\u4f55\u4ea4\u6613\u5305\u62ec\u60a8\u6253\u7b97\u8f6c\u8d26\u7684\u4ee5\u592a\u5e01\u6570\u91cf\u91cf\uff0c\u71c3\u6c14\u9650\u989d\uff0c\u71c3\u6c14\u4ef7\u683c\uff0c\u4e00\u4e2a\u968f\u673a\u6570(nonce)\uff0c\u63a5\u6536\u5730\u5740\u4ee5\u53ca\u53ef\u9009\u62e9\u6027\u7684\u6dfb\u52a0\u7684\u6570\u636e\u3002 \u5728\u5e7f\u544a\u53d1\u9001\u5230\u7f51\u7edc\u4e4b\u524d\uff0c\u5fc5\u987b\u4f7f\u7528\u53d1\u9001\u65b9\u7684\u79c1\u94a5\u5bf9\u8be5\u4ea4\u6613\u8fdb\u884c\u7b7e\u540d\u3002"),(0,o.kt)("p",null,"\u5047\u8bbe\u60a8\u5df2\u7ecf\u8fde\u63a5\u4e86\u5ba2\u6237\u7aef\uff0c\u4e0b\u4e00\u6b65\u5c31\u662f\u52a0\u8f7d\u60a8\u7684\u79c1\u94a5\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'privateKey, err := crypto.HexToECDSA("fad9c8855b740a0b7ed4c221dbad0f33a83a49cad6b3fe8d5817ac83d38b6a19")\nif err != nil {\n  log.Fatal(err)\n}\n')),(0,o.kt)("p",null,"\u4e4b\u540e\u6211\u4eec\u9700\u8981\u83b7\u5f97\u5e10\u6237\u7684\u968f\u673a\u6570(nonce)\u3002 \u6bcf\u7b14\u4ea4\u6613\u90fd\u9700\u8981\u4e00\u4e2anonce\u3002 \u6839\u636e\u5b9a\u4e49\uff0cnonce\u662f\u4ec5\u4f7f\u7528\u4e00\u6b21\u7684\u6570\u5b57\u3002 \u5982\u679c\u662f\u53d1\u9001\u4ea4\u6613\u7684\u65b0\u5e10\u6237\uff0c\u5219\u8be5\u968f\u673a\u6570\u5c06\u4e3a\u201c0\u201d\u3002 \u6765\u81ea\u5e10\u6237\u7684\u6bcf\u4e2a\u65b0\u4e8b\u52a1\u90fd\u5fc5\u987b\u5177\u6709\u524d\u4e00\u4e2anonce\u589e\u52a01\u7684nonce\u3002\u5f88\u96be\u5bf9\u6240\u6709nonce\u8fdb\u884c\u624b\u52a8\u8ddf\u8e2a\uff0c\u4e8e\u662fethereum\u5ba2\u6237\u7aef\u63d0\u4f9b\u4e00\u4e2a\u5e2e\u52a9\u65b9\u6cd5",(0,o.kt)("inlineCode",{parentName:"p"},"PendingNonceAt"),"\uff0c\u5b83\u5c06\u8fd4\u56de\u4f60\u5e94\u8be5\u4f7f\u7528\u7684\u4e0b\u4e00\u4e2anonce\u3002"),(0,o.kt)("p",null,"\u8be5\u51fd\u6570\u9700\u8981\u6211\u4eec\u53d1\u9001\u7684\u5e10\u6237\u7684\u516c\u5171\u5730\u5740 - \u8fd9\u4e2a\u6211\u4eec\u53ef\u4ee5\u4ece\u79c1\u94a5\u6d3e\u751f\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'publicKey := privateKey.Public()\npublicKeyECDSA, ok := publicKey.(*ecdsa.PublicKey)\nif !ok {\n  log.Fatal("cannot assert type: publicKey is not of type *ecdsa.PublicKey")\n}\n\nfromAddress := crypto.PubkeyToAddress(*publicKeyECDSA)\n')),(0,o.kt)("p",null,"\u63a5\u4e0b\u6765\u6211\u4eec\u53ef\u4ee5\u8bfb\u53d6\u6211\u4eec\u5e94\u8be5\u7528\u4e8e\u5e10\u6237\u4ea4\u6613\u7684\u968f\u673a\u6570\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"nonce, err := client.PendingNonceAt(context.Background(), fromAddress)\nif err != nil {\n  log.Fatal(err)\n}\n")),(0,o.kt)("p",null,"\u4e0b\u4e00\u6b65\u662f\u8bbe\u7f6e\u6211\u4eec\u5c06\u8981\u8f6c\u79fb\u7684ETH\u6570\u91cf\u3002 \u4f46\u662f\u6211\u4eec\u5fc5\u987b\u5c06ETH\u4ee5\u592a\u8f6c\u6362\u4e3awei\uff0c\u56e0\u4e3a\u8fd9\u662f\u4ee5\u592a\u574a\u533a\u5757\u94fe\u6240\u4f7f\u7528\u7684\u3002 \u4ee5\u592a\u7f51\u652f\u6301\u6700\u591a18\u4e2a\u5c0f\u6570\u4f4d\uff0c\u56e0\u6b641\u4e2aETH\u4e3a1\u52a018\u4e2a\u96f6\u3002 \u8fd9\u91cc\u6709\u4e00\u4e2a\u5c0f\u5de5\u5177\u53ef\u4ee5\u5e2e\u52a9\u60a8\u5728ETH\u548cwei\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362: ",(0,o.kt)("a",{parentName:"p",href:"https://etherconverter.netlify.com"},"https://etherconverter.netlify.com")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"value := big.NewInt(1000000000000000000) // in wei (1 eth)\n")),(0,o.kt)("p",null,"ETH\u8f6c\u8d26\u7684\u71c3\u6c14\u5e94\u8bbe\u4e0a\u9650\u4e3a\u201c21000\u201d\u5355\u4f4d\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"gasLimit := uint64(21000) // in units\n")),(0,o.kt)("p",null,"\u71c3\u6c14\u4ef7\u683c\u5fc5\u987b\u4ee5wei\u4e3a\u5355\u4f4d\u8bbe\u5b9a\u3002 \u5728\u64b0\u5199\u672c\u6587\u65f6\uff0c\u5c06\u5728\u4e00\u4e2a\u533a\u5757\u4e2d\u6bd4\u8f83\u5feb\u7684\u6253\u5305\u4ea4\u6613\u7684\u71c3\u6c14\u4ef7\u683c\u4e3a30 gwei\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"gasPrice := big.NewInt(30000000000) // in wei (30 gwei)\n")),(0,o.kt)("p",null,"\u7136\u800c\uff0c\u71c3\u6c14\u4ef7\u683c\u603b\u662f\u6839\u636e\u5e02\u573a\u9700\u6c42\u548c\u7528\u6237\u613f\u610f\u652f\u4ed8\u7684\u4ef7\u683c\u800c\u6ce2\u52a8\u7684\uff0c\u56e0\u6b64\u5bf9\u71c3\u6c14\u4ef7\u683c\u8fdb\u884c\u786c\u7f16\u7801\u6709\u65f6\u5e76\u4e0d\u7406\u60f3\u3002 go-ethereum\u5ba2\u6237\u7aef\u63d0\u4f9b",(0,o.kt)("inlineCode",{parentName:"p"},"SuggestGasPrice"),"\u51fd\u6570\uff0c\u7528\u4e8e\u6839\u636e'x'\u4e2a\u5148\u524d\u5757\u6765\u83b7\u5f97\u5e73\u5747\u71c3\u6c14\u4ef7\u683c\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"gasPrice, err := client.SuggestGasPrice(context.Background())\nif err != nil {\n  log.Fatal(err)\n}\n")),(0,o.kt)("p",null,"\u63a5\u4e0b\u6765\u6211\u4eec\u5f04\u6e05\u695a\u6211\u4eec\u5c06ETH\u53d1\u9001\u7ed9\u8c01\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'toAddress := common.HexToAddress("0x4592d8f8d7b001e72cb26a73e4fa1806a51ac79d")\n')),(0,o.kt)("p",null,"\u73b0\u5728\u6211\u4eec\u6700\u7ec8\u53ef\u4ee5\u901a\u8fc7\u5bfc\u5165go-ethereum",(0,o.kt)("inlineCode",{parentName:"p"},"core/types"),"\u5305\u5e76\u8c03\u7528",(0,o.kt)("inlineCode",{parentName:"p"},"NewTransaction"),"\u6765\u751f\u6210\u6211\u4eec\u7684\u672a\u7b7e\u540d\u4ee5\u592a\u574a\u4e8b\u52a1\uff0c\u8fd9\u4e2a\u51fd\u6570\u9700\u8981\u63a5\u6536nonce\uff0c\u5730\u5740\uff0c\u503c\uff0c\u71c3\u6c14\u4e0a\u9650\u503c\uff0c\u71c3\u6c14\u4ef7\u683c\u548c\u53ef\u9009\u53d1\u7684\u6570\u636e\u3002 \u53d1\u9001ETH\u7684\u6570\u636e\u5b57\u6bb5\u4e3a\u201cnil\u201d\u3002 \u5728\u4e0e\u667a\u80fd\u5408\u7ea6\u8fdb\u884c\u4ea4\u4e92\u65f6\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u6570\u636e\u5b57\u6bb5\uff0c\u4ec5\u4ec5\u8f6c\u8d26\u4ee5\u592a\u5e01\u662f\u4e0d\u9700\u8981\u6570\u636e\u5b57\u6bb5\u7684\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"tx := types.NewTransaction(nonce, toAddress, value, gasLimit, gasPrice, nil)\n")),(0,o.kt)("p",null,"\u4e0b\u4e00\u6b65\u662f\u4f7f\u7528\u53d1\u4ef6\u4eba\u7684\u79c1\u94a5\u5bf9\u4e8b\u52a1\u8fdb\u884c\u7b7e\u540d\u3002 \u4e3a\u6b64\uff0c\u6211\u4eec\u8c03\u7528",(0,o.kt)("inlineCode",{parentName:"p"},"SignTx"),"\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u63a5\u53d7\u4e00\u4e2a\u672a\u7b7e\u540d\u7684\u4e8b\u52a1\u548c\u6211\u4eec\u4e4b\u524d\u6784\u9020\u7684\u79c1\u94a5\u3002 ",(0,o.kt)("inlineCode",{parentName:"p"},"SignTx"),"\u65b9\u6cd5\u9700\u8981EIP155\u7b7e\u540d\u8005\uff0c\u8fd9\u4e2a\u4e5f\u9700\u8981\u6211\u4eec\u5148\u4ece\u5ba2\u6237\u7aef\u62ff\u5230\u94feID\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"chainID, err := client.NetworkID(context.Background())\nif err != nil {\n  log.Fatal(err)\n}\n\nsignedTx, err := types.SignTx(tx, types.NewEIP155Signer(chainID), privateKey)\nif err != nil {\n  log.Fatal(err)\n}\n")),(0,o.kt)("p",null,"\u73b0\u5728\u6211\u4eec\u7ec8\u4e8e\u51c6\u5907\u901a\u8fc7\u5728\u5ba2\u6237\u7aef\u4e0a\u8c03\u7528\u201cSendTransaction\u201d\u6765\u5c06\u5df2\u7b7e\u540d\u7684\u4e8b\u52a1\u5e7f\u64ad\u5230\u6574\u4e2a\u7f51\u7edc\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'err = client.SendTransaction(context.Background(), signedTx)\nif err != nil {\n  log.Fatal(err)\n}\n\nfmt.Printf("tx sent: %s", signedTx.Hash().Hex()) // tx sent: 0x77006fcb3938f648e2cc65bafd27dec30b9bfbe9df41f78498b9c8b7322a249e\n')),(0,o.kt)("p",null,"\u7136\u540e\u4f60\u53ef\u4ee5\u53bbEtherscan\u770b\u4ea4\u6613\u7684\u786e\u8ba4\u8fc7\u7a0b:  ",(0,o.kt)("a",{parentName:"p",href:"https://rinkeby.etherscan.io/tx/0x77006fcb3938f648e2cc65bafd27dec30b9bfbe9df41f78498b9c8b7322a249e"},"https://rinkeby.etherscan.io/tx/0x77006fcb3938f648e2cc65bafd27dec30b9bfbe9df41f78498b9c8b7322a249e")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"\u5b8c\u6574\u4ee3\u7801"},"\u5b8c\u6574\u4ee3\u7801"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/mhxw/ethereum-development-with-go-book/blob/main/code/transfer_eth.go"},"transfer_eth.go")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "context"\n    "crypto/ecdsa"\n    "fmt"\n    "log"\n    "math/big"\n\n    "github.com/ethereum/go-ethereum/common"\n    "github.com/ethereum/go-ethereum/core/types"\n    "github.com/ethereum/go-ethereum/crypto"\n    "github.com/ethereum/go-ethereum/ethclient"\n)\n\nfunc main() {\n    client, err := ethclient.Dial("https://rinkeby.infura.io")\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    privateKey, err := crypto.HexToECDSA("fad9c8855b740a0b7ed4c221dbad0f33a83a49cad6b3fe8d5817ac83d38b6a19")\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    publicKey := privateKey.Public()\n    publicKeyECDSA, ok := publicKey.(*ecdsa.PublicKey)\n    if !ok {\n        log.Fatal("cannot assert type: publicKey is not of type *ecdsa.PublicKey")\n    }\n\n    fromAddress := crypto.PubkeyToAddress(*publicKeyECDSA)\n    nonce, err := client.PendingNonceAt(context.Background(), fromAddress)\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    value := big.NewInt(1000000000000000000) // in wei (1 eth)\n    gasLimit := uint64(21000)                // in units\n    gasPrice, err := client.SuggestGasPrice(context.Background())\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    toAddress := common.HexToAddress("0x4592d8f8d7b001e72cb26a73e4fa1806a51ac79d")\n    var data []byte\n    tx := types.NewTransaction(nonce, toAddress, value, gasLimit, gasPrice, data)\n\n    chainID, err := client.NetworkID(context.Background())\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    signedTx, err := types.SignTx(tx, types.NewEIP155Signer(chainID), privateKey)\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    err = client.SendTransaction(context.Background(), signedTx)\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    fmt.Printf("tx sent: %s", signedTx.Hash().Hex())\n}\n')))}g.isMDXComponent=!0}}]);