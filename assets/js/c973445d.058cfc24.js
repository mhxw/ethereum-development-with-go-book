"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4146],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(t),m=a,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return t?r.createElement(f,o(o({ref:n},p),{},{components:t})):r.createElement(f,o({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8170:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var r=t(7462),a=t(3366),i=(t(7294),t(3905)),o=["components"],s={description:"Tutorial on how to send a message on whisper with Go."},l="Sending Messages on Whisper",c={unversionedId:"en/whisper-send/README",id:"en/whisper-send/README",title:"Sending Messages on Whisper",description:"Tutorial on how to send a message on whisper with Go.",source:"@site/docs/en/whisper-send/README.md",sourceDirName:"en/whisper-send",slug:"/en/whisper-send/",permalink:"/ethereum-development-with-go-book/docs/en/whisper-send/",editUrl:"https://github.com/mhxw/ethereum-development-with-go-book/tree/dev/docs/en/whisper-send/README.md",tags:[],version:"current",frontMatter:{description:"Tutorial on how to send a message on whisper with Go."},sidebar:"en",previous:{title:"Generating Whisper Key Pair",permalink:"/ethereum-development-with-go-book/docs/en/whisper-keys/"},next:{title:"Subscribing to Whisper Messages",permalink:"/ethereum-development-with-go-book/docs/en/whisper-subscribe/"}},p={},u=[{value:"Full code",id:"full-code",level:3}],d={toc:u};function m(e){var n=e.components,t=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"sending-messages-on-whisper"},"Sending Messages on Whisper"),(0,i.kt)("p",null,"Before we're able to create a message, we must first have a public key to encrypt the message. In the ",(0,i.kt)("a",{parentName:"p",href:"../whisper-keys"},"previous section")," we learned how to generate a public and private key pair using the ",(0,i.kt)("inlineCode",{parentName:"p"},"NewKeyPair")," function which returned a key ID that references this key pair. We now have to call the ",(0,i.kt)("inlineCode",{parentName:"p"},"PublicKey")," function to read the key pair's public key in bytes format which we'll be using to encrypt the message."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"publicKey, err := client.PublicKey(context.Background(), keyID)\nif err != nil {\n  log.Print(err)\n}\n\nfmt.Println(hexutil.Encode(publicKey)) // 0x04f17356fd52b0d13e5ede84f998d26276f1fc9d08d9e73dcac6ded5f3553405db38c2f257c956f32a0c1fca4c3ff6a38a2c277c1751e59a574aecae26d3bf5d1d\n")),(0,i.kt)("p",null,"Now we'll construct our whisper message by initializing the ",(0,i.kt)("inlineCode",{parentName:"p"},"NewMessage")," struct from the go-ethereum ",(0,i.kt)("inlineCode",{parentName:"p"},"whisper/whisperv6")," package, which requires the following properties:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Payload")," as the message content in bytes format"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"PublicKey")," as the key we'll use for encryption"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"TTL")," as the time-to-live in seconds for the message"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"PowTime")," as maximal time in seconds to be spent on proof of work."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"PowTarget")," as the minimal PoW target required for this message.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'message := whisperv6.NewMessage{\n  Payload:   []byte("Hello"),\n  PublicKey: publicKey,\n  TTL:       60,\n  PowTime:   2,\n  PowTarget: 2.5,\n}\n')),(0,i.kt)("p",null,"We can now broadcast to the network by invoking the client's ",(0,i.kt)("inlineCode",{parentName:"p"},"Post")," function giving it the message, will it'll return a hash of the message."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"messageHash, err := client.Post(context.Background(), message)\nif err != nil {\n  log.Fatal(err)\n}\n\nfmt.Println(messageHash) // 0xdbfc815d3d122a90d7fb44d1fc6a46f3d76ec752f3f3d04230fe5f1b97d2209a\n")),(0,i.kt)("p",null,"In the ",(0,i.kt)("a",{parentName:"p",href:"../whisper-subscribe"},"next section")," we'll see how we can create a message subscription to be able to receive the messages in real time."),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"full-code"},"Full code"),(0,i.kt)("p",null,"Commands"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"geth --shh --rpc --ws\n")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mhxw/ethereum-development-with-go-book/blob/main/code/whisper_send.go"},"whisper_send.go")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "context"\n    "fmt"\n    "log"\n\n    "github.com/ethereum/go-ethereum/common/hexutil"\n    "github.com/ethereum/go-ethereum/whisper/shhclient"\n    "github.com/ethereum/go-ethereum/whisper/whisperv6"\n)\n\nfunc main() {\n    client, err := shhclient.Dial("ws://127.0.0.1:8546")\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    keyID, err := client.NewKeyPair(context.Background())\n    if err != nil {\n        log.Fatal(err)\n    }\n    fmt.Println(keyID) // 0ec5cfe4e215239756054992dbc2e10f011db1cdfc88b9ba6301e2f9ea1b58d2\n\n    publicKey, err := client.PublicKey(context.Background(), keyID)\n    if err != nil {\n        log.Print(err)\n    }\n    fmt.Println(hexutil.Encode(publicKey)) // 0x04f17356fd52b0d13e5ede84f998d26276f1fc9d08d9e73dcac6ded5f3553405db38c2f257c956f32a0c1fca4c3ff6a38a2c277c1751e59a574aecae26d3bf5d1d\n\n    message := whisperv6.NewMessage{\n        Payload:   []byte("Hello"),\n        PublicKey: publicKey,\n        TTL:       60,\n        PowTime:   2,\n        PowTarget: 2.5,\n    }\n    messageHash, err := client.Post(context.Background(), message)\n    if err != nil {\n        log.Fatal(err)\n    }\n    fmt.Println(messageHash) // 0xdbfc815d3d122a90d7fb44d1fc6a46f3d76ec752f3f3d04230fe5f1b97d2209a\n}\n')))}m.isMDXComponent=!0}}]);