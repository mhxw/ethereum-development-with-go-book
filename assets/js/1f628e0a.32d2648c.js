"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7187],{3905:function(e,n,t){t.d(n,{Zo:function(){return b},kt:function(){return k}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=r.createContext({}),u=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},b=function(e){var n=u(e.components);return r.createElement(i.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},s=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,l=e.originalType,i=e.parentName,b=a(e,["components","mdxType","originalType","parentName"]),s=u(t),k=o,p=s["".concat(i,".").concat(k)]||s[k]||m[k]||l;return t?r.createElement(p,c(c({ref:n},b),{},{components:t})):r.createElement(p,c({ref:n},b))}));function k(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var l=t.length,c=new Array(l);c[0]=s;var a={};for(var i in n)hasOwnProperty.call(n,i)&&(a[i]=n[i]);a.originalType=e,a.mdxType="string"==typeof e?e:o,c[1]=a;for(var u=2;u<l;u++)c[u]=t[u];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}s.displayName="MDXCreateElement"},2283:function(e,n,t){t.r(n),t.d(n,{assets:function(){return b},contentTitle:function(){return i},default:function(){return k},frontMatter:function(){return a},metadata:function(){return u},toc:function(){return m}});var r=t(7462),o=t(3366),l=(t(7294),t(3905)),c=["components"],a={description:"Tutorial on how to query blocks in Ethereum with Go."},i="Querying Blocks",u={unversionedId:"en/block-query/README",id:"en/block-query/README",title:"Querying Blocks",description:"Tutorial on how to query blocks in Ethereum with Go.",source:"@site/docs/en/block-query/README.md",sourceDirName:"en/block-query",slug:"/en/block-query/",permalink:"/ethereum-development-with-go-book/docs/en/block-query/",editUrl:"https://github.com/mhxw/ethereum-development-with-go-book/tree/dev/docs/en/block-query/README.md",tags:[],version:"current",frontMatter:{description:"Tutorial on how to query blocks in Ethereum with Go."},sidebar:"en",previous:{title:"Transactions",permalink:"/ethereum-development-with-go-book/docs/en/transactions/"},next:{title:"Querying Transactions",permalink:"/ethereum-development-with-go-book/docs/en/transaction-query/"}},b={},m=[{value:"Block header",id:"block-header",level:4},{value:"Full block",id:"full-block",level:4},{value:"Full code",id:"full-code",level:3}],s={toc:m};function k(e){var n=e.components,t=(0,o.Z)(e,c);return(0,l.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"querying-blocks"},"Querying Blocks"),(0,l.kt)("p",null,"There's two ways you can query block information as we'll see."),(0,l.kt)("h4",{id:"block-header"},"Block header"),(0,l.kt)("p",null,"You can call the client's ",(0,l.kt)("inlineCode",{parentName:"p"},"HeaderByNumber")," to return header information about a block. It'll return the latest block header if you pass ",(0,l.kt)("inlineCode",{parentName:"p"},"nil"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"header, err := client.HeaderByNumber(context.Background(), nil)\nif err != nil {\n  log.Fatal(err)\n}\n\nfmt.Println(header.Number.String()) // 5671744\n")),(0,l.kt)("h4",{id:"full-block"},"Full block"),(0,l.kt)("p",null,"Call the client's ",(0,l.kt)("inlineCode",{parentName:"p"},"BlockByNumber")," method to get the full block. You can read all the contents and metadata of the block such as block number, block timestamp, block hash, block difficulty, as well as the list of transactions and much much more."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"blockNumber := big.NewInt(5671744)\nblock, err := client.BlockByNumber(context.Background(), blockNumber)\nif err != nil {\n  log.Fatal(err)\n}\n\nfmt.Println(block.Number().Uint64())     // 5671744\nfmt.Println(block.Time().Uint64())       // 1527211625\nfmt.Println(block.Difficulty().Uint64()) // 3217000136609065\nfmt.Println(block.Hash().Hex())          // 0x9e8751ebb5069389b855bba72d94902cc385042661498a415979b7b6ee9ba4b9\nfmt.Println(len(block.Transactions()))   // 144\n")),(0,l.kt)("p",null,"Call ",(0,l.kt)("inlineCode",{parentName:"p"},"TransactionCount")," to return just the count of transactions in a block."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"count, err := client.TransactionCount(context.Background(), block.Hash())\nif err != nil {\n  log.Fatal(err)\n}\n\nfmt.Println(count) // 144\n")),(0,l.kt)("p",null,"In the next section we'll learn how to query transactions in a block."),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"full-code"},"Full code"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/mhxw/ethereum-development-with-go-book/blob/main/code/blocks.go"},"blocks.go")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "context"\n    "fmt"\n    "log"\n    "math/big"\n\n    "github.com/ethereum/go-ethereum/ethclient"\n)\n\nfunc main() {\n    client, err := ethclient.Dial("https://cloudflare-eth.com")\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    header, err := client.HeaderByNumber(context.Background(), nil)\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    fmt.Println(header.Number.String()) // 5671744\n\n    blockNumber := big.NewInt(5671744)\n    block, err := client.BlockByNumber(context.Background(), blockNumber)\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    fmt.Println(block.Number().Uint64())     // 5671744\n    fmt.Println(block.Time().Uint64())       // 1527211625\n    fmt.Println(block.Difficulty().Uint64()) // 3217000136609065\n    fmt.Println(block.Hash().Hex())          // 0x9e8751ebb5069389b855bba72d94902cc385042661498a415979b7b6ee9ba4b9\n    fmt.Println(len(block.Transactions()))   // 144\n\n    count, err := client.TransactionCount(context.Background(), block.Hash())\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    fmt.Println(count) // 144\n}\n')))}k.isMDXComponent=!0}}]);