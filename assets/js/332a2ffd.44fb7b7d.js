"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3059],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=s(n),d=a,f=m["".concat(l,".").concat(d)]||m[d]||p[d]||o;return n?r.createElement(f,c(c({ref:t},u),{},{components:n})):r.createElement(f,c({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var s=2;s<o;s++)c[s]=n[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9430:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return p}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),c=["components"],i={"\u6982\u8ff0":"\u7528Go\u90e8\u7f72\u667a\u80fd\u5408\u7ea6\u7684\u6559\u7a0b\u3002"},l="\u90e8\u7f72\u667a\u80fd\u5408\u7ea6",s={unversionedId:"zh/smart-contract-deploy/README",id:"zh/smart-contract-deploy/README",title:"\u90e8\u7f72\u667a\u80fd\u5408\u7ea6",description:"\u5982\u679c\u4f60\u8fd8\u6ca1\u770b\u4e4b\u524d\u7684\u7ae0\u8282\uff0c\u8bf7\u5148\u5b66\u4e60\u7f16\u8bd1\u667a\u80fd\u5408\u7ea6\u7684\u7ae0\u8282\u56e0\u4e3a\u8fd9\u8282\u5185\u5bb9\uff0c\u9700\u8981\u5148\u4e86\u89e3\u5982\u4f55\u5c06\u667a\u80fd\u5408\u7ea6\u7f16\u8bd1\u4e3aGo\u6587\u4ef6\u3002",source:"@site/docs/zh/smart-contract-deploy/README.md",sourceDirName:"zh/smart-contract-deploy",slug:"/zh/smart-contract-deploy/",permalink:"/ethereum-development-with-go-book/docs/zh/smart-contract-deploy/",editUrl:"https://github.com/mhxw/ethereum-development-with-go-book/tree/dev/docs/zh/smart-contract-deploy/README.md",tags:[],version:"current",frontMatter:{"\u6982\u8ff0":"\u7528Go\u90e8\u7f72\u667a\u80fd\u5408\u7ea6\u7684\u6559\u7a0b\u3002"},sidebar:"zh",previous:{title:"\u667a\u80fd\u5408\u7ea6\u7684\u7f16\u8bd1\u4e0eABI",permalink:"/ethereum-development-with-go-book/docs/zh/smart-contract-compile/"},next:{title:"\u52a0\u8f7d\u667a\u80fd\u5408\u7ea6",permalink:"/ethereum-development-with-go-book/docs/zh/smart-contract-load/"}},u={},p=[{value:"\u5b8c\u6574\u4ee3\u7801",id:"\u5b8c\u6574\u4ee3\u7801",level:3}],m={toc:p};function d(e){var t=e.components,n=(0,a.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"\u90e8\u7f72\u667a\u80fd\u5408\u7ea6"},"\u90e8\u7f72\u667a\u80fd\u5408\u7ea6"),(0,o.kt)("p",null,"\u5982\u679c\u4f60\u8fd8\u6ca1\u770b\u4e4b\u524d\u7684\u7ae0\u8282\uff0c\u8bf7\u5148\u5b66\u4e60",(0,o.kt)("a",{parentName:"p",href:"../smart-contract-compile"},"\u7f16\u8bd1\u667a\u80fd\u5408\u7ea6\u7684\u7ae0\u8282"),"\u56e0\u4e3a\u8fd9\u8282\u5185\u5bb9\uff0c\u9700\u8981\u5148\u4e86\u89e3\u5982\u4f55\u5c06\u667a\u80fd\u5408\u7ea6\u7f16\u8bd1\u4e3aGo\u6587\u4ef6\u3002"),(0,o.kt)("p",null,"\u5047\u8bbe\u4f60\u5df2\u7ecf\u5bfc\u5165\u4ece",(0,o.kt)("inlineCode",{parentName:"p"},"abigen"),"\u751f\u6210\u7684\u65b0\u521b\u5efa\u7684Go\u5305\u6587\u4ef6\uff0c\u5e76\u8bbe\u7f6eethclient\uff0c\u52a0\u8f7d\u60a8\u7684\u79c1\u94a5\uff0c\u4e0b\u4e00\u6b65\u662f\u521b\u5efa\u4e00\u4e2a\u6709\u914d\u7f6e\u5bc6\u5319\u7684\u4ea4\u6613\u53d1\u9001\u5668(tansactor)\u3002 \u9996\u5148\u4ecego-ethereum\u5bfc\u5165",(0,o.kt)("inlineCode",{parentName:"p"},"accounts/abi/bind"),"\u5305\uff0c\u7136\u540e\u8c03\u7528\u4f20\u5165\u79c1\u94a5\u7684",(0,o.kt)("inlineCode",{parentName:"p"},"NewKeyedTransactor"),"\u3002 \u7136\u540e\u8bbe\u7f6e\u901a\u5e38\u7684\u5c5e\u6027\uff0c\u5982nonce\uff0c\u71c3\u6c14\u4ef7\u683c\uff0c\u71c3\u6c14\u4e0a\u7ebf\u9650\u5236\u548cETH\u503c\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"auth := bind.NewKeyedTransactor(privateKey)\nauth.Nonce = big.NewInt(int64(nonce))\nauth.Value = big.NewInt(0)     // in wei\nauth.GasLimit = uint64(300000) // in units\nauth.GasPrice = gasPrice\n")),(0,o.kt)("p",null,"\u5982\u679c\u4f60\u8fd8\u8bb0\u5f97\u4e0a\u4e2a\u7ae0\u8282\u7684\u5185\u5bb9, \u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u201cStore\u201d\u5408\u7ea6\uff0c\u7528\u4e8e\u8bbe\u7f6e\u548c\u5b58\u50a8\u952e/\u503c\u5bf9\u3002 \u751f\u6210\u7684Go\u5408\u7ea6\u6587\u4ef6\u63d0\u4f9b\u4e86\u90e8\u7f72\u65b9\u6cd5\u3002 \u90e8\u7f72\u65b9\u6cd5\u540d\u79f0\u59cb\u7ec8\u4ee5\u5355\u8bcd",(0,o.kt)("em",{parentName:"p"},"Deploy"),"\u5f00\u5934\uff0c\u540e\u8ddf\u5408\u7ea6\u540d\u79f0\uff0c\u5728\u672c\u4f8b\u4e2d\u4e3a",(0,o.kt)("em",{parentName:"p"},"Store"),"\u3002"),(0,o.kt)("p",null,"deploy\u51fd\u6570\u63a5\u53d7\u6709\u5bc6\u5319\u7684\u4e8b\u52a1\u5904\u7406\u5668\uff0cethclient\uff0c\u4ee5\u53ca\u667a\u80fd\u5408\u7ea6\u6784\u9020\u51fd\u6570\u53ef\u80fd\u63a5\u53d7\u7684\u4efb\u4f55\u8f93\u5165\u53c2\u6570\u3002\u6211\u4eec\u6d4b\u8bd5\u7684\u667a\u80fd\u5408\u7ea6\u63a5\u53d7\u4e00\u4e2a\u7248\u672c\u53f7\u7684\u5b57\u7b26\u4e32\u53c2\u6570\u3002 \u6b64\u51fd\u6570\u5c06\u8fd4\u56de\u65b0\u90e8\u7f72\u7684\u5408\u7ea6\u5730\u5740\uff0c\u4e8b\u52a1\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u4ea4\u4e92\u7684\u5408\u7ea6\u5b9e\u4f8b\uff0c\u8fd8\u6709\u9519\u8bef\uff08\u5982\u679c\u6709\uff09\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'input := "1.0"\naddress, tx, instance, err := store.DeployStore(auth, client, input)\nif err != nil {\n  log.Fatal(err)\n}\n\nfmt.Println(address.Hex())   // 0x147B8eb97fD247D06C4006D269c90C1908Fb5D54\nfmt.Println(tx.Hash().Hex()) // 0xdae8ba5444eefdc99f4d45cd0c4f24056cba6a02cefbf78066ef9f4188ff7dc0\n\n_ = instance // will be using the instance in the \u4e0b\u4e2a\u7ae0\u8282\n')),(0,o.kt)("p",null,"\u5c31\u8fd9\u4e48\u7b80\u5355\uff1a\uff09\u4f60\u53ef\u4ee5\u7528\u4e8b\u52a1\u54c8\u5e0c\u6765\u5728Etherscan\u4e0a\u67e5\u8be2\u5408\u7ea6\u7684\u90e8\u7f72\u72b6\u6001: ",(0,o.kt)("a",{parentName:"p",href:"https://rinkeby.etherscan.io/tx/0xdae8ba5444eefdc99f4d45cd0c4f24056cba6a02cefbf78066ef9f4188ff7dc0"},"https://rinkeby.etherscan.io/tx/0xdae8ba5444eefdc99f4d45cd0c4f24056cba6a02cefbf78066ef9f4188ff7dc0")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"\u5b8c\u6574\u4ee3\u7801"},"\u5b8c\u6574\u4ee3\u7801"),(0,o.kt)("p",null,"Commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"solc --abi Store.sol\nsolc --bin Store.sol\nabigen --bin=Store_sol_Store.bin --abi=Store_sol_Store.abi --pkg=store --out=Store.go\n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/mhxw/ethereum-development-with-go-book/blob/main/code/contracts/Store.sol"},"Store.sol")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"pragma solidity ^0.4.24;\n\ncontract Store {\n  event ItemSet(bytes32 key, bytes32 value);\n\n  string public version;\n  mapping (bytes32 => bytes32) public items;\n\n  constructor(string _version) public {\n    version = _version;\n  }\n\n  function setItem(bytes32 key, bytes32 value) external {\n    items[key] = value;\n    emit ItemSet(key, value);\n  }\n}\n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/mhxw/ethereum-development-with-go-book/blob/main/code/contract_deploy.go"},"contract_deploy.go")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "context"\n    "crypto/ecdsa"\n    "fmt"\n    "log"\n    "math/big"\n\n    "github.com/ethereum/go-ethereum/accounts/abi/bind"\n    "github.com/ethereum/go-ethereum/crypto"\n    "github.com/ethereum/go-ethereum/ethclient"\n\n    store "./contracts" // for demo\n)\n\nfunc main() {\n    client, err := ethclient.Dial("https://rinkeby.infura.io")\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    privateKey, err := crypto.HexToECDSA("fad9c8855b740a0b7ed4c221dbad0f33a83a49cad6b3fe8d5817ac83d38b6a19")\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    publicKey := privateKey.Public()\n    publicKeyECDSA, ok := publicKey.(*ecdsa.PublicKey)\n    if !ok {\n        log.Fatal("cannot assert type: publicKey is not of type *ecdsa.PublicKey")\n    }\n\n    fromAddress := crypto.PubkeyToAddress(*publicKeyECDSA)\n    nonce, err := client.PendingNonceAt(context.Background(), fromAddress)\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    gasPrice, err := client.SuggestGasPrice(context.Background())\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    auth := bind.NewKeyedTransactor(privateKey)\n    auth.Nonce = big.NewInt(int64(nonce))\n    auth.Value = big.NewInt(0)     // in wei\n    auth.GasLimit = uint64(300000) // in units\n    auth.GasPrice = gasPrice\n\n    input := "1.0"\n    address, tx, instance, err := store.DeployStore(auth, client, input)\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    fmt.Println(address.Hex())   // 0x147B8eb97fD247D06C4006D269c90C1908Fb5D54\n    fmt.Println(tx.Hash().Hex()) // 0xdae8ba5444eefdc99f4d45cd0c4f24056cba6a02cefbf78066ef9f4188ff7dc0\n\n    _ = instance\n}\n')),(0,o.kt)("p",null,"solc version used for these examples"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ solc --version\n0.4.24+commit.e67f0147.Emscripten.clang\n")))}d.isMDXComponent=!0}}]);