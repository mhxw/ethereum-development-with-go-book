"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6834],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return p}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),i=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=i(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=i(t),p=a,f=m["".concat(c,".").concat(p)]||m[p]||u[p]||o;return t?r.createElement(f,s(s({ref:n},d),{},{components:t})):r.createElement(f,s({ref:n},d))}));function p(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var i=2;i<o;i++)s[i]=t[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1559:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return c},default:function(){return p},frontMatter:function(){return l},metadata:function(){return i},toc:function(){return u}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),s=["components"],l={"\u6982\u8ff0":"\u7528Go\u6765\u67e5\u8be2ERC20\u4ee3\u5e01\u667a\u80fd\u5408\u7ea6\u7684\u6559\u7a0b\u3002"},c="\u67e5\u8be2ERC20\u4ee3\u5e01\u667a\u80fd\u5408\u7ea6",i={unversionedId:"zh/smart-contract-read-erc20/README",id:"zh/smart-contract-read-erc20/README",title:"\u67e5\u8be2ERC20\u4ee3\u5e01\u667a\u80fd\u5408\u7ea6",description:"\u9996\u5148\u521b\u5efa\u4e00\u4e2aERC20\u667a\u80fd\u5408\u7ea6interface\u3002 \u8fd9\u53ea\u662f\u4e0e\u60a8\u53ef\u4ee5\u8c03\u7528\u7684\u51fd\u6570\u7684\u51fd\u6570\u5b9a\u4e49\u7684\u5951\u7ea6\u3002",source:"@site/docs/zh/smart-contract-read-erc20/README.md",sourceDirName:"zh/smart-contract-read-erc20",slug:"/zh/smart-contract-read-erc20/",permalink:"/ethereum-development-with-go-book/docs/zh/smart-contract-read-erc20/",editUrl:"https://github.com/mhxw/ethereum-development-with-go-book/tree/dev/docs/zh/smart-contract-read-erc20/README.md",tags:[],version:"current",frontMatter:{"\u6982\u8ff0":"\u7528Go\u6765\u67e5\u8be2ERC20\u4ee3\u5e01\u667a\u80fd\u5408\u7ea6\u7684\u6559\u7a0b\u3002"},sidebar:"zh",previous:{title:"\u8bfb\u53d6\u667a\u80fd\u5408\u7ea6\u7684\u5b57\u8282\u7801",permalink:"/ethereum-development-with-go-book/docs/zh/smart-contract-bytecode/"},next:{title:"\u4e8b\u4ef6",permalink:"/ethereum-development-with-go-book/docs/zh/events/"}},d={},u=[{value:"\u5b8c\u6574\u4ee3\u7801",id:"\u5b8c\u6574\u4ee3\u7801",level:3}],m={toc:u};function p(e){var n=e.components,t=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"\u67e5\u8be2erc20\u4ee3\u5e01\u667a\u80fd\u5408\u7ea6"},"\u67e5\u8be2ERC20\u4ee3\u5e01\u667a\u80fd\u5408\u7ea6"),(0,o.kt)("p",null,"\u9996\u5148\u521b\u5efa\u4e00\u4e2aERC20\u667a\u80fd\u5408\u7ea6interface\u3002 \u8fd9\u53ea\u662f\u4e0e\u60a8\u53ef\u4ee5\u8c03\u7528\u7684\u51fd\u6570\u7684\u51fd\u6570\u5b9a\u4e49\u7684\u5951\u7ea6\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},'pragma solidity ^0.4.24;\n\ncontract ERC20 {\n    string public constant name = "";\n    string public constant symbol = "";\n    uint8 public constant decimals = 0;\n\n    function totalSupply() public constant returns (uint);\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\n    function transfer(address to, uint tokens) public returns (bool success);\n    function approve(address spender, uint tokens) public returns (bool success);\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\n\n    event Transfer(address indexed from, address indexed to, uint tokens);\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n}\n')),(0,o.kt)("p",null,"\u7136\u540e\u5c06interface\u667a\u80fd\u5408\u7ea6\u7f16\u8bd1\u4e3aJSON ABI\uff0c\u5e76\u4f7f\u7528",(0,o.kt)("inlineCode",{parentName:"p"},"abigen"),"\u4eceABI\u521b\u5efaGo\u5305\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"solc --abi erc20.sol\nabigen --abi=erc20_sol_ERC20.abi --pkg=token --out=erc20.go\n")),(0,o.kt)("p",null,"\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u50cf\u5f80\u5e38\u4e00\u6837\u8bbe\u7f6e\u4e86\u4ee5\u592a\u574a\u5ba2\u6237\u7aef\uff0c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u5c06\u65b0\u7684",(0,o.kt)("em",{parentName:"p"},"token"),"\u5305\u5bfc\u5165\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u5e76\u5b9e\u4f8b\u5316\u5b83\u3002\u8fd9\u4e2a\u4f8b\u5b50\u91cc\u6211\u4eec\u7528",(0,o.kt)("a",{parentName:"p",href:"https://etherscan.io/address/0xa74476443119a942de498590fe1f2454d7d4ac0d"},"Golem")," \u4ee3\u5e01\u7684\u5730\u5740."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'tokenAddress := common.HexToAddress("0xa74476443119A942dE498590Fe1f2454d7D4aC0d")\ninstance, err := token.NewToken(tokenAddress, client)\nif err != nil {\n  log.Fatal(err)\n}\n')),(0,o.kt)("p",null,"\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u8c03\u7528\u4efb\u4f55ERC20\u7684\u65b9\u6cd5\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u8be2\u7528\u6237\u7684\u4ee3\u5e01\u4f59\u989d\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'address := common.HexToAddress("0x0536806df512d6cdde913cf95c9886f65b1d3462")\nbal, err := instance.BalanceOf(&bind.CallOpts{}, address)\nif err != nil {\n  log.Fatal(err)\n}\n\nfmt.Printf("wei: %s\\n", bal) // "wei: 74605500647408739782407023"\n')),(0,o.kt)("p",null,"\u6211\u4eec\u8fd8\u53ef\u4ee5\u8bfbERC20\u667a\u80fd\u5408\u7ea6\u7684\u516c\u5171\u53d8\u91cf\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'name, err := instance.Name(&bind.CallOpts{})\nif err != nil {\n  log.Fatal(err)\n}\n\nsymbol, err := instance.Symbol(&bind.CallOpts{})\nif err != nil {\n  log.Fatal(err)\n}\n\ndecimals, err := instance.Decimals(&bind.CallOpts{})\nif err != nil {\n  log.Fatal(err)\n}\n\nfmt.Printf("name: %s\\n", name)         // "name: Golem Network"\nfmt.Printf("symbol: %s\\n", symbol)     // "symbol: GNT"\nfmt.Printf("decimals: %v\\n", decimals) // "decimals: 18"\n')),(0,o.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u505a\u4e00\u4e9b\u7b80\u5355\u7684\u6570\u5b66\u8fd0\u7b97\u5c06\u4f59\u989d\u8f6c\u6362\u4e3a\u53ef\u8bfb\u7684\u5341\u8fdb\u5236\u683c\u5f0f\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'fbal := new(big.Float)\nfbal.SetString(bal.String())\nvalue := new(big.Float).Quo(fbal, big.NewFloat(math.Pow10(int(decimals))))\n\nfmt.Printf("balance: %f", value) // "balance: 74605500.647409"\n')),(0,o.kt)("p",null,"\u540c\u6837\u7684\u4fe1\u606f\u4e5f\u53ef\u4ee5\u5728etherscan\u4e0a\u67e5\u8be2: ",(0,o.kt)("a",{parentName:"p",href:"https://etherscan.io/token/0xa74476443119a942de498590fe1f2454d7d4ac0d?a=0x0536806df512d6cdde913cf95c9886f65b1d3462"},"https://etherscan.io/token/0xa74476443119a942de498590fe1f2454d7d4ac0d?a=0x0536806df512d6cdde913cf95c9886f65b1d3462")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"\u5b8c\u6574\u4ee3\u7801"},"\u5b8c\u6574\u4ee3\u7801"),(0,o.kt)("p",null,"Commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"solc --abi erc20.sol\nabigen --abi=erc20_sol_ERC20.abi --pkg=token --out=erc20.go\n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/mhxw/ethereum-development-with-go-book/blob/main/code/contracts_erc20/erc20.sol"},"erc20.sol")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},'pragma solidity ^0.4.24;\n\ncontract ERC20 {\n    string public constant name = "";\n    string public constant symbol = "";\n    uint8 public constant decimals = 0;\n\n    function totalSupply() public constant returns (uint);\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\n    function transfer(address to, uint tokens) public returns (bool success);\n    function approve(address spender, uint tokens) public returns (bool success);\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\n\n    event Transfer(address indexed from, address indexed to, uint tokens);\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n}\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/mhxw/ethereum-development-with-go-book/blob/main/code/contract_read_erc20.go"},"contract_read_erc20.go")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "fmt"\n    "log"\n    "math"\n    "math/big"\n\n    "github.com/ethereum/go-ethereum/accounts/abi/bind"\n    "github.com/ethereum/go-ethereum/common"\n    "github.com/ethereum/go-ethereum/ethclient"\n\n    token "./contracts_erc20" // for demo\n)\n\nfunc main() {\n    client, err := ethclient.Dial("https://cloudflare-eth.com")\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    // Golem (GNT) Address\n    tokenAddress := common.HexToAddress("0xa74476443119A942dE498590Fe1f2454d7D4aC0d")\n    instance, err := token.NewToken(tokenAddress, client)\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    address := common.HexToAddress("0x0536806df512d6cdde913cf95c9886f65b1d3462")\n    bal, err := instance.BalanceOf(&bind.CallOpts{}, address)\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    name, err := instance.Name(&bind.CallOpts{})\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    symbol, err := instance.Symbol(&bind.CallOpts{})\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    decimals, err := instance.Decimals(&bind.CallOpts{})\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    fmt.Printf("name: %s\\n", name)         // "name: Golem Network"\n    fmt.Printf("symbol: %s\\n", symbol)     // "symbol: GNT"\n    fmt.Printf("decimals: %v\\n", decimals) // "decimals: 18"\n\n    fmt.Printf("wei: %s\\n", bal) // "wei: 74605500647408739782407023"\n\n    fbal := new(big.Float)\n    fbal.SetString(bal.String())\n    value := new(big.Float).Quo(fbal, big.NewFloat(math.Pow10(int(decimals))))\n\n    fmt.Printf("balance: %f", value) // "balance: 74605500.647409"\n}\n')),(0,o.kt)("p",null,"solc version used for these examples"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ solc --version\n0.4.24+commit.e67f0147.Emscripten.clang\n")))}p.isMDXComponent=!0}}]);