"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5466],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),d=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),f=d(n),m=o,p=f["".concat(l,".").concat(m)]||f[m]||u[m]||a;return n?r.createElement(p,c(c({ref:t},s),{},{components:n})):r.createElement(p,c({ref:t},s))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=f;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var d=2;d<a;d++)c[d]=n[d];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},9786:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return i},metadata:function(){return d},toc:function(){return u}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),c=["components"],i={title:"\u5730\u5740\u9a8c\u8bc1"},l="\u5730\u5740\u68c0\u67e5",d={unversionedId:"zh/address-check/README",id:"zh/address-check/README",title:"\u5730\u5740\u9a8c\u8bc1",description:"\u672c\u8282\u5c06\u4ecb\u7ecd\u5982\u4f55\u786e\u8ba4\u4e00\u4e2a\u5730\u5740\u5e76\u786e\u5b9a\u5176\u662f\u5426\u4e3a\u667a\u80fd\u5408\u7ea6\u5730\u5740\u3002",source:"@site/docs/zh/address-check/README.md",sourceDirName:"zh/address-check",slug:"/zh/address-check/",permalink:"/ethereum-development-with-go-book/docs/zh/address-check/",editUrl:"https://github.com/mhxw/ethereum-development-with-go-book/tree/dev/docs/zh/address-check/README.md",tags:[],version:"current",frontMatter:{title:"\u5730\u5740\u9a8c\u8bc1"},sidebar:"zh",previous:{title:"\u5206\u5c42\u786e\u5b9a\u6027\u94b1\u5305",permalink:"/ethereum-development-with-go-book/docs/zh/hd-wallet/"},next:{title:"\u4ea4\u6613(`Transaction`)",permalink:"/ethereum-development-with-go-book/docs/zh/transactions/"}},s={},u=[{value:"\u68c0\u67e5\u5730\u5740\u662f\u5426\u6709\u6548",id:"\u68c0\u67e5\u5730\u5740\u662f\u5426\u6709\u6548",level:2},{value:"\u68c0\u67e5\u5730\u5740\u662f\u5426\u4e3a\u8d26\u6237\u6216\u667a\u80fd\u5408\u7ea6",id:"\u68c0\u67e5\u5730\u5740\u662f\u5426\u4e3a\u8d26\u6237\u6216\u667a\u80fd\u5408\u7ea6",level:2},{value:"\u5b8c\u6574\u4ee3\u7801",id:"\u5b8c\u6574\u4ee3\u7801",level:3}],f={toc:u};function m(e){var t=e.components,n=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u5730\u5740\u68c0\u67e5"},"\u5730\u5740\u68c0\u67e5"),(0,a.kt)("p",null,"\u672c\u8282\u5c06\u4ecb\u7ecd\u5982\u4f55\u786e\u8ba4\u4e00\u4e2a\u5730\u5740\u5e76\u786e\u5b9a\u5176\u662f\u5426\u4e3a\u667a\u80fd\u5408\u7ea6\u5730\u5740\u3002"),(0,a.kt)("h2",{id:"\u68c0\u67e5\u5730\u5740\u662f\u5426\u6709\u6548"},"\u68c0\u67e5\u5730\u5740\u662f\u5426\u6709\u6548"),(0,a.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7b80\u5355\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u6765\u68c0\u67e5\u4ee5\u592a\u574a\u5730\u5740\u662f\u5426\u6709\u6548\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'re := regexp.MustCompile("^0x[0-9a-fA-F]{40}$")\n\nfmt.Printf("is valid: %v\\n", re.MatchString("0x323b5d4c32345ced77393b3530b1eed0f346429d")) // is valid: true\nfmt.Printf("is valid: %v\\n", re.MatchString("0xZYXb5d4c32345ced77393b3530b1eed0f346429d")) // is valid: false\n')),(0,a.kt)("h2",{id:"\u68c0\u67e5\u5730\u5740\u662f\u5426\u4e3a\u8d26\u6237\u6216\u667a\u80fd\u5408\u7ea6"},"\u68c0\u67e5\u5730\u5740\u662f\u5426\u4e3a\u8d26\u6237\u6216\u667a\u80fd\u5408\u7ea6"),(0,a.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\uff0c\u82e5\u5728\u8be5\u5730\u5740\u5b58\u50a8\u4e86\u5b57\u8282\u7801\uff0c\u8be5\u5730\u5740\u662f\u667a\u80fd\u5408\u7ea6\u3002\u8fd9\u662f\u4e00\u4e2a\u793a\u4f8b\uff0c\u5728\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u83b7\u53d6\u4e00\u4e2a\u4ee3\u5e01\u667a\u80fd\u5408\u7ea6\u7684\u5b57\u8282\u7801\u5e76\u68c0\u67e5\u5176\u957f\u5ea6\u4ee5\u9a8c\u8bc1\u5b83\u662f\u4e00\u4e2a\u667a\u80fd\u5408\u7ea6\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'// 0x Protocol Token (ZRX) smart contract address\naddress := common.HexToAddress("0xe41d2489571d322189246dafa5ebde1f4699f498")\nbytecode, err := client.CodeAt(context.Background(), address, nil) // nil is latest block\nif err != nil {\n  log.Fatal(err)\n}\n\nisContract := len(bytecode) > 0\n\nfmt.Printf("is contract: %v\\n", isContract) // is contract: true\n')),(0,a.kt)("p",null,"\u5f53\u5730\u5740\u4e0a\u6ca1\u6709\u5b57\u8282\u7801\u65f6\uff0c\u6211\u4eec\u77e5\u9053\u5b83\u4e0d\u662f\u4e00\u4e2a\u667a\u80fd\u5408\u7ea6\uff0c\u5b83\u662f\u4e00\u4e2a\u6807\u51c6\u7684\u4ee5\u592a\u574a\u8d26\u6237\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'// a random user account address\naddress := common.HexToAddress("0x8e215d06ea7ec1fdb4fc5fd21768f4b34ee92ef4")\nbytecode, err := client.CodeAt(context.Background(), address, nil) // nil is latest block\nif err != nil {\n  log.Fatal(err)\n}\n\nisContract = len(bytecode) > 0\n\nfmt.Printf("is contract: %v\\n", isContract) // is contract: false\n')),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"\u5b8c\u6574\u4ee3\u7801"},"\u5b8c\u6574\u4ee3\u7801"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/mhxw/ethereum-development-with-go-book/blob/main/code/address_check.go"},"address_check.go")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "context"\n    "fmt"\n    "log"\n    "regexp"\n\n    "github.com/ethereum/go-ethereum/common"\n    "github.com/ethereum/go-ethereum/ethclient"\n)\n\nfunc main() {\n    re := regexp.MustCompile("^0x[0-9a-fA-F]{40}$")\n\n    fmt.Printf("is valid: %v\\n", re.MatchString("0x323b5d4c32345ced77393b3530b1eed0f346429d")) // is valid: true\n    fmt.Printf("is valid: %v\\n", re.MatchString("0xZYXb5d4c32345ced77393b3530b1eed0f346429d")) // is valid: false\n\n    client, err := ethclient.Dial("https://cloudflare-eth.com")\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    // 0x Protocol Token (ZRX) smart contract address\n    address := common.HexToAddress("0xe41d2489571d322189246dafa5ebde1f4699f498")\n    bytecode, err := client.CodeAt(context.Background(), address, nil) // nil is latest block\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    isContract := len(bytecode) > 0\n\n    fmt.Printf("is contract: %v\\n", isContract) // is contract: true\n\n    // a random user account address\n    address = common.HexToAddress("0x8e215d06ea7ec1fdb4fc5fd21768f4b34ee92ef4")\n    bytecode, err = client.CodeAt(context.Background(), address, nil) // nil is latest block\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    isContract = len(bytecode) > 0\n\n    fmt.Printf("is contract: %v\\n", isContract) // is contract: false\n}\n')))}m.isMDXComponent=!0}}]);